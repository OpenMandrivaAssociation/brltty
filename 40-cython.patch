Index: brltty/Bindings/Python/Makefile.in
===================================================================
--- brltty.orig/Bindings/Python/Makefile.in	2012-08-01 14:09:00.119157697 +1000
+++ brltty/Bindings/Python/Makefile.in	2012-08-01 14:09:00.335157704 +1000
@@ -21,15 +21,11 @@
 
 PYTHON_OK = @PYTHON_OK@
 PYTHON = @PYTHON@
-PYTHON_PROLOGUE = @PYTHON_PROLOGUE@
 PYTHON_VERSION = @PYTHON_VERSION@
 PYTHON_CPPFLAGS = @PYTHON_CPPFLAGS@
-PYTHON_LIBS = @PYTHON_LIBS@
-PYTHON_EXTRA_LIBS = @PYTHON_EXTRA_LIBS@
-PYTHON_EXTRA_LDFLAGS = @PYTHON_EXTRA_LDFLAGS@
 PYTHON_SITE_PKG = @PYTHON_SITE_PKG@
-PYREXC = @PYREXC@
-PYREXC_CFLAGS = @PYREXC_CFLAGS@
+CYTHON = @CYTHON@
+CYTHON_CFLAGS = @CYTHON_CFLAGS@
 PYTHON_DESTDIR = $(INSTALL_ROOT)
 
 PYTHON_MODULE = $(API_NAME)
@@ -44,7 +40,7 @@
 	[ "@host_os@" != "mingw32" ] || $(PYTHON) ./setup.py --quiet bdist_wininst --skip-build
 
 brlapi.auto.c: $(SRC_DIR)/brlapi.pyx $(SRC_DIR)/c_brlapi.pxd constants.auto.pyx
-	$(PYREXC) -I. -o $@ $(SRC_DIR)/brlapi.pyx
+	$(CYTHON) -3 -I. -o $@ $(SRC_DIR)/brlapi.pyx
 
 constants.auto.pyx: $(CONSTANTS_SCRIPTS) $(CONSTANTS_SOURCES)
 	$(AWK) $(CONSTANTS_OPTIONS) $(CONSTANTS_SOURCES) >$@
Index: brltty/Bindings/Python/bindings.m4
===================================================================
--- brltty.orig/Bindings/Python/bindings.m4	2012-07-31 14:02:01.902770902 +1000
+++ brltty/Bindings/Python/bindings.m4	2012-08-01 14:09:00.335157704 +1000
@@ -20,117 +20,59 @@
 AC_DEFUN([BRLTTY_PYTHON_BINDINGS], [dnl
 PYTHON_OK=true
 
-AC_PATH_PROG([PYTHON], [python])
+AC_PATH_PROG([PYTHON], [python3])
 if test -z "${PYTHON}"
 then
    AC_MSG_WARN([Python interpreter not found])
    PYTHON_OK=false
-else
-   PYTHON_PROLOGUE=""
-   for python_module in sys distutils.sysconfig
-   do
-      if test -n "`${PYTHON} -c "import ${python_module};" 2>&1`"
-      then
-         AC_MSG_WARN([Python module not found: ${python_module}])
-         PYTHON_OK=false
-      else
-         PYTHON_PROLOGUE="${PYTHON_PROLOGUE}import ${python_module}; "
-      fi
-   done
-   AC_SUBST([PYTHON_PROLOGUE])
+fi
 
-   if "${PYTHON_OK}"
+if "${PYTHON_OK}"
+then
+   if test -z "${PYTHON_VERSION}"
    then
+      [PYTHON_BIN="`basename ${PYTHON}`"]
+      [PYTHON_VERSION="`pkg-config --modversion ${PYTHON_BIN}`"]
       if test -z "${PYTHON_VERSION}"
       then
-         [PYTHON_VERSION="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_config_vars('VERSION')[0];"`"]
-         if test -z "${PYTHON_VERSION}"
-         then
-            [PYTHON_VERSION="`${PYTHON} -c "${PYTHON_PROLOGUE} print '.'.join(sys.version.split()[0].split('.')[:2]);"`"]
-            if test -z "${PYTHON_VERSION}"
-            then
-               AC_MSG_WARN([Python version not defined])
-            fi
-         fi
-      fi
-      AC_SUBST([PYTHON_VERSION])
-
-      if test -z "${PYTHON_CPPFLAGS}"
-      then
-         [python_include_directory="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_python_inc();"`"]
-         if test -z "${python_include_directory}"
-         then
-            AC_MSG_WARN([Python include directory not found])
-            PYTHON_OK=false
-         else
-            PYTHON_CPPFLAGS="-I${python_include_directory}"
-
-            if test ! -f "${python_include_directory}/Python.h"
-            then
-               AC_MSG_WARN([Python developer environment not installed])
-               PYTHON_OK=false
-            fi
-         fi
-      fi
-      AC_SUBST([PYTHON_CPPFLAGS])
-
-      if test -z "${PYTHON_LIBS}"
-      then
-         PYTHON_LIBS="-lpython${PYTHON_VERSION}"
-
-         [python_library_directory="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_python_lib(0,1);"`"]
-         if test -z "${python_library_directory}"
-         then
-            AC_MSG_WARN([Python library directory not found])
-         else
-            PYTHON_LIBS="-L${python_library_directory}/config ${PYTHON_LIBS}"
-         fi
-      fi
-      AC_SUBST([PYTHON_LIBS])
-
-      if test -z "${PYTHON_EXTRA_LIBS}"
-      then
-         [PYTHON_EXTRA_LIBS="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_config_var('LOCALMODLIBS'), distutils.sysconfig.get_config_var('LIBS');"`"]
-      fi
-      AC_SUBST([PYTHON_EXTRA_LIBS])
-
-      if test -z "${PYTHON_EXTRA_LDFLAGS}"
-      then
-         [PYTHON_EXTRA_LDFLAGS="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_config_var('LINKFORSHARED');"`"]
+         AC_MSG_WARN([Python version not defined])
       fi
-      AC_SUBST([PYTHON_EXTRA_LDFLAGS])
+   fi
+fi
+AC_SUBST([PYTHON_VERSION])
 
-      if test -z "${PYTHON_SITE_PKG}"
-      then
-         [PYTHON_SITE_PKG="`${PYTHON} -c "${PYTHON_PROLOGUE} print distutils.sysconfig.get_python_lib(0,0);"`"]
-         if test -z "${PYTHON_SITE_PKG}"
-         then
-            AC_MSG_WARN([Python package directory not found])
-         fi
-      fi
-      AC_SUBST([PYTHON_SITE_PKG])
+if test -z "${PYTHON_CPPFLAGS}"
+then
+   [python_include_directory="`pkg-config --cflags python-${PYTHON_VERSION}`"]
+   if test -z "${python_include_directory}"
+   then
+      AC_MSG_WARN([Python include directory not found])
+      PYTHON_OK=false
+   else
+      PYTHON_CPPFLAGS="${python_include_directory}"
    fi
 fi
+AC_SUBST([PYTHON_CPPFLAGS])
 
-AC_PATH_PROG([PYREXC], [pyrexc])
-if test -z "${PYREXC}"
+AC_PATH_PROG([CYTHON], [cython3])
+if test -z "${CYTHON}"
 then
-   AC_MSG_WARN([Pyrex compiler not found])
+   AC_MSG_WARN([Cython compiler not found])
    PYTHON_OK=false
 fi
 
 if test "${GCC}" = "yes"
 then
-   PYREXC_CFLAGS="-Wno-parentheses -Wno-unused -fno-strict-aliasing -U_POSIX_C_SOURCE -U_XOPEN_SOURCE"
+   CYTHON_CFLAGS="-Wno-parentheses -Wno-unused -fno-strict-aliasing -U_POSIX_C_SOURCE -U_XOPEN_SOURCE"
 else
    case "${host_os}"
    in
       *)
-         PYREXC_CFLAGS=""
+         CYTHON_CFLAGS=""
          ;;
    esac
 fi
-AC_SUBST([PYREXC_CFLAGS])
+AC_SUBST([CYTHON_CFLAGS])
 
 AC_SUBST([PYTHON_OK])
 ])
Index: brltty/Bindings/Python/c_brlapi.pxd
===================================================================
--- brltty.orig/Bindings/Python/c_brlapi.pxd	2012-07-31 14:02:01.902770902 +1000
+++ brltty/Bindings/Python/c_brlapi.pxd	2012-08-01 14:09:00.339157704 +1000
@@ -116,6 +116,6 @@
 	void *memcpy(void *, void *, size_t)
 
 cdef extern from "Python.h":
-	# these are macros, we just need to make Pyrex aware of them
+	# these are macros, we just need to make Cython aware of them
 	int Py_BEGIN_ALLOW_THREADS
 	int Py_END_ALLOW_THREADS
Index: brltty/Bindings/Python/setup.py.in
===================================================================
--- brltty.orig/Bindings/Python/setup.py.in	2012-07-31 14:02:01.902770902 +1000
+++ brltty/Bindings/Python/setup.py.in	2012-08-01 14:09:00.339157704 +1000
@@ -28,7 +28,7 @@
         libraries = ["brlapi"],
         language = "c",
         define_macros = [],
-        extra_compile_args = "@PYREXC_CFLAGS@".split())
+        extra_compile_args = "@CYTHON_CFLAGS@".split())
     
     setup(
         name = "Brlapi",
Index: brltty/Bindings/Python/brlapi.pyx
===================================================================
--- brltty.orig/Bindings/Python/brlapi.pyx	2012-06-08 15:15:06.028916530 +1000
+++ brltty/Bindings/Python/brlapi.pyx	2012-08-01 14:13:38.231166410 +1000
@@ -8,7 +8,6 @@
 Example : 
 import brlapi
 import errno
-import Xlib.keysymdef.miscellany
 try:
   b = brlapi.Connection()
   b.enterTtyMode()
@@ -17,10 +16,7 @@
   # Accept the home, window up and window down braille commands
   b.acceptKeys(brlapi.rangeType_command,[brlapi.KEY_TYPE_CMD|brlapi.KEY_CMD_HOME, brlapi.KEY_TYPE_CMD|brlapi.KEY_CMD_WINUP, brlapi.KEY_TYPE_CMD|brlapi.KEY_CMD_WINDN])
 
-  # Accept the tab key
-  b.acceptKeys(brlapi.rangeType_key,[brlapi.KEY_TYPE_SYM|Xlib.keysymdef.miscellany.XK_Tab])
-
-  b.writeText("Press home, winup/dn or tab to continue ... ¤")
+  b.writeText("Press home or winup/dn to continue ... ¤")
   key = b.readKey()
 
   k = b.expandKeyCode(key)
@@ -43,16 +39,16 @@
 
 except brlapi.ConnectionError, e:
   if e.brlerrno == brlapi.ERROR_CONNREFUSED:
-    print "Connection to %s refused. BRLTTY is too busy..." % e.host
+    print ("Connection to %s refused. BRLTTY is too busy..." % e.host)
   elif e.brlerrno == brlapi.ERROR_AUTHENTICATION:
-    print "Authentication with %s failed. Please check the permissions of %s" % (e.host,e.auth)
+    print ("Authentication with %s failed. Please check the permissions of %s" % (e.host,e.auth))
   elif e.brlerrno == brlapi.ERROR_LIBCERR and (e.libcerrno == errno.ECONNREFUSED or e.libcerrno == errno.ENOENT):
-    print "Connection to %s failed. Is BRLTTY really running?" % (e.host)
+    print ("Connection to %s failed. Is BRLTTY really running?" % (e.host))
   else:
-    print "Connection to BRLTTY at %s failed: " % (e.host)
-  print e
-  print e.brlerrno
-  print e.libcerrno
+    print ("Connection to BRLTTY at %s failed: " % (e.host))
+  print (e)
+  print (e.brlerrno)
+  print (e.libcerrno)
 """
 
 ###############################################################################
